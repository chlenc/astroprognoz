const TelegramBot = require('node-telegram-bot-api');
const token =/* "459914749:AAE38mka1v9hyxYk1l2aihXBN05lRlM0Oi8";*/"502100941:AAETwKMomDTjDGaJsKLIcNZnbzXH93fTrTo";
var schedule = require('node-schedule');

const bot = new TelegramBot(token, {polling:true});

const helpers = require('./helpers');
const keyboards = require('./keyboard');
const kb = require('./keyboard-buttons');
const frases = require('./frases');

const rule = new schedule.RecurrenceRule();
rule.minute = 1;

schedule.scheduleJob(rule, function(){
    helpers.trigger(bot)
});

bot.on('message', (msg) => {
    // console.log(msg)
    const chatId = msg.chat.id;
    const text = msg.text;

    if ((text == '–î–∞, —É –º–µ–Ω—è –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è')) {
        helpers.setTimezone(msg, 0)
        helpers.whenAsk(bot, chatId);

    }
    else if (text === '–ù–µ—Ç, —É –º–µ–Ω—è –Ω–µ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è') {
        helpers.chooseTimezone(bot, chatId)
    }
    else if (helpers.isTimezoneValue(text) !== false) {
        helpers.setTimezone(msg, helpers.isTimezoneValue(text));
        helpers.whenAsk(bot, chatId);
    }
    else if ((text == '–ó–∞—Ä–∞–Ω–µ–µ')) {
        helpers.updateData(("users/" + chatId), {beforehand: true});
        helpers.beforehandMes(bot, chatId);
    }
    else if ((text == '–í –¥–µ–Ω—å –ø—Ä–æ–≥–Ω–æ–∑–∞')) {
        helpers.updateData(("users/" + chatId), {beforehand: false});
        helpers.in_a_day(bot, chatId);
    }
    else if (helpers.checkForTimes(text)) {
        helpers.setForecastTime(bot, chatId, text)
    }
    else if ((text == '–£–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è')) {
        helpers.todayForecast(bot, chatId)
    }
    else if ((text == '‚öô–ù–∞—Å—Ç—Ä–æ–π–∫–∏Ô∏è')) {
        helpers.moscowAsk(bot, chatId, msg.chat.first_name);
    }
    else if ((text == '–£–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞')) {
        helpers.tomorrowForecast(bot, chatId)
    }
    else if ((text == 'üîó–ü–æ–¥–µ–ª–∏—Ç—å—Å—è' || text == 'üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ–≥–Ω–æ–∑–æ–º')) {
        helpers.getTodayForecast(function (callback) {
            bot.sendMessage(chatId, '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –¥—Ä—É–≥–æ–º –ø—Ä–æ–≥–Ω–æ–∑–æ–º –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', {
                reply_markup: {
                    inline_keyboard: [[{
                        text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ–≥–Ω–æ–∑–æ–º',
                        switch_inline_query: '\n\n' + callback
                    }]]
                }
            })
        })
    }
    else if ((text == '‚ö°Ô∏è–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?')) {
        bot.sendMessage(chatId, frases.howText);
    }
    else if ((text == 'üíáüèª–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∏–∂–∫—É')) {
        helpers.sendAdvice(bot, chatId, 2, frases.hairCut);
    }
    else if ((text == 'üöÄ–õ—É—á—à–∏–π –¥–µ–Ω—å –¥–ª—è –Ω–∞—á–∏–Ω–∞–Ω–∏–π')) {
        helpers.sendAdvice(bot, chatId, 4, frases.bestStartDay);
    }
    else if ((text == 'üõ†–£–±–æ—Ä–∫–∞, –¥–æ–º–∞—à–Ω–∏–µ –¥–µ–ª–∞')) {
        helpers.sendAdvice(bot, chatId, 8, frases.cleanDay);
    }
    else if ((text == 'üéØ–£–¥–∞—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –±–∏–∑–Ω–µ—Å–∞')) {
        helpers.sendAdvice(bot, chatId, 6, frases.buisnessDay);
    }

});

bot.on('callback_query', query => {
    // console.log(query.data)

    const {chat, message_id, text} = query.message;
    try{
        var parseQuery = JSON.parse(query.data);
        // if(parseQuery.type === 'advice'){
            helpers.getAdviceDetalization(parseQuery.num,parseQuery.date,function(callback){
                bot.sendMessage(chat.id, callback + '\n\n' + frases.goToHome);
            });
        // }
    }catch(e){
        console.log(e)
    }
})

bot.onText(/\/start/, msg => {
    helpers.sendAstroForecast(bot, msg.chat.id, new Date())
    setTimeout(function () {
        helpers.moscowAsk(bot, msg.chat.id, msg.chat.first_name)
    }, 1000);
});

bot.onText(/\/home/, msg => {
    helpers.home(bot, msg.chat.id)
});

bot.onText(/\/help/, msg => {
    bot.sendMessage(msg.chat.id,frases.help)
});

bot.onText(/\/about/, msg => {
    bot.sendMessage(msg.chat.id,frases.about)
});

bot.onText(/\/echo/, msg => {
     gs.getData(function (callback) {
         console.log(callback)
     })
    console.log('end')
});


console.log('Bot has been started ....');

/*1. –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç–∞ –¥—Ä—É–≥—É" –Ω–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ–≥–Ω–æ–∑–æ–º" (–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–µ —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞, –∞ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ)*/